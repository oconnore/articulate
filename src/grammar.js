/* parser generated by jison 0.4.14 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var o=function(v,a,l,r){for(l=a.length,r={};l--;r[a[l]]=v);return r},V0=[1,7],V1=[1,8],V2=[1,10],V3=[1,16],V4=[1,19],V5=[1,15],V6=[1,14],V7=[1,12],V8=[1,13],V9=[1,17],Va=[1,18],Vb=[5,9,14,16,20,21,25,27,28,29,31,32,39],Vc=[1,25],Vd=[1,23],Ve=[1,32],Vf=[1,31],Vg=[1,30],Vh=[1,28],Vi=[1,29],Vj=[1,26],Vk=[1,27],Vl=[1,33],Vm=[1,34],Vn=[1,37],Vo=[1,45],Vp=[1,44],Vq=[1,57],Vr=[1,58],Vs=[9,14,20,25,29],Vt=[1,78],Vu=[1,86],Vv=[1,85],Vw=[1,84],Vx=[1,82],Vy=[1,83],Vz=[1,81],VA=[1,94],VB=[9,14,16,20,21,25,27,29,31,32,39],VC=[31,32],VD=[1,102],VE=[1,103],VF=[1,106],VG=[2,50],VH=[9,14,16,20,21,25,27,28,31,32,39],VI=[2,106],VJ=[2,33],VK=[2,51],VL=[1,124],VM=[1,123],VN=[1,130],VO=[1,131],VP=[1,129],VQ=[1,127],VR=[1,128],VS=[1,125],VT=[1,126],VU=[1,132],VV=[2,37],VW=[9,20,25],VX=[2,34],VY=[9,14,20,21,25,27,28,29,31,32,39,42],VZ=[2,38];
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"article":3,"elements":4,"EOF":5,"unit":6,"entity":7,"macro":8,"WS":9,"nopbUnit":10,"nopbEntity":11,"nobUnit":12,"nobEntity":13,"WORD":14,"nopbControl":15,"ESC":16,"escapedEntity":17,"nobControl":18,"premacro":19,"<":20,"%":21,"wref":22,"params":23,"pipe":24,"|":25,"body":26,"{":27,"}":28,"(":29,"plist":30,")":31,",":32,"plistItem":33,"pentity":34,"string":35,"paramControl":36,"control":37,"bodyControl":38,"\"":39,"innerString":40,"nonQuote":41,"\\":42,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",9:"WS",14:"WORD",16:"ESC",20:"<",21:"%",25:"|",27:"{",28:"}",29:"(",31:")",32:",",39:"\"",42:"\\"},
productions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[10,1],[10,1],[10,1],[12,1],[12,1],[12,1],[11,1],[11,1],[11,2],[13,1],[13,1],[13,2],[8,2],[19,2],[19,3],[19,3],[19,4],[19,3],[19,4],[19,5],[19,6],[19,4],[19,5],[19,4],[19,5],[24,2],[24,3],[24,3],[24,4],[24,3],[24,4],[24,4],[24,5],[26,3],[26,2],[22,1],[22,2],[23,3],[23,3],[23,2],[30,3],[30,1],[33,1],[33,2],[34,1],[34,1],[34,1],[34,2],[34,2],[34,2],[34,2],[34,3],[34,3],[7,1],[7,1],[7,2],[17,1],[17,1],[17,2],[17,3],[17,2],[17,3],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[38,1],[18,1],[18,1],[18,1],[18,1],[18,1],[18,1],[15,1],[15,1],[15,1],[15,1],[15,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[37,1],[36,1],[36,1],[36,1],[36,1],[36,1],[35,3],[40,2],[40,3],[40,3],[40,0],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1],[41,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:return $$[$0-1];
break;
case 2:return [];
break;
case 3:this.$ = yy.unify($$[$0-1].concat($$[$0])); 
break;
case 4:this.$ = $$[$0];
break;
case 5:this.$ = $$[$0];
break;
case 6:this.$ = [$$[$0]];
break;
case 7:this.$ = [$$[$0]];
break;
case 8:this.$ = [$$[$0]];
break;
case 9:this.$ = $$[$0];
break;
case 10:this.$ = $$[$0];
break;
case 11:this.$ = [$$[$0]];
break;
case 12:this.$ = $$[$0];
break;
case 13:this.$ = $$[$0];
break;
case 14:this.$ = [$$[$0]];
break;
case 15:this.$ = [$$[$0]];
break;
case 16:this.$ = $$[$0];
break;
case 17:this.$ = [$$[$0]];
break;
case 18:this.$ = [$$[$0]];
break;
case 19:this.$ = $$[$0];
break;
case 20:this.$ = $$[$0-1];
break;
case 21:this.$ = new yy.Macro($$[$0], [], [], yy);
break;
case 22:this.$ = new yy.Macro($$[$0-1], [], [], yy);
break;
case 23:this.$ = new yy.Macro($$[$0-1], $$[$0], [], yy);
break;
case 24:this.$ = new yy.Macro($$[$0-2], $$[$0-1], [], yy);
break;
case 25:this.$ = new yy.Macro($$[$0-1], $$[$0], [], yy);
break;
case 26:this.$ = new yy.Macro($$[$0-2], $$[$0-1], [], yy);
break;
case 27:this.$ = new yy.Macro($$[$0-3], $$[$0-2], $$[$0], yy);
break;
case 28:this.$ = new yy.Macro($$[$0-4], $$[$0-3], $$[$0-1], yy);
break;
case 29:this.$ = new yy.Macro($$[$0-2], $$[$0-1], $$[$0], yy);
break;
case 30:this.$ = new yy.Macro($$[$0-3], $$[$0-2], $$[$0-1], yy);
break;
case 31:this.$ = new yy.Macro($$[$0-2], [], $$[$0], yy);
break;
case 32:this.$ = new yy.Macro($$[$0-3], [], $$[$0-1], yy);
break;
case 33:this.$ = ['pipe', $$[$0]];
break;
case 34:this.$ = ['pipe', $$[$0]];
break;
case 35:this.$ = ['pipe', $$[$0-1], $$[$0]];
break;
case 36:this.$ = ['pipe', $$[$0-1], $$[$0]];
break;
case 37:this.$ = $$[$0-2].concat(['pipe', $$[$0]]);
break;
case 38:this.$ = $$[$0-3].concat(['pipe', $$[$0]]);
break;
case 39:this.$ = $$[$0-3].concat(['pipe', $$[$0-1], $$[$0]]);
break;
case 40:this.$ = $$[$0-4].concat(['pipe', $$[$0-1], $$[$0]]);
break;
case 41:this.$ = $$[$0-1];
break;
case 42:this.$ = [];
break;
case 43:this.$ = $$[$0];
break;
case 44:this.$ = $$[$0-1] + $$[$0];
break;
case 45:this.$ = $$[$0-1];
break;
case 46:this.$ = [];
break;
case 47:this.$ = [];
break;
case 48:this.$ = $$[$0-2].concat([$$[$0]]);
break;
case 49:this.$ = [$$[$0]];
break;
case 50:this.$ = $$[$0];
break;
case 51:this.$ = $$[$0];
break;
case 52:this.$ = $$[$0];
break;
case 53:this.$ = $$[$0];
break;
case 54:this.$ = $$[$0];
break;
case 55:this.$ = $$[$0-1] + $$[$0];
break;
case 56:this.$ = $$[$0-1] + $$[$0];
break;
case 57:this.$ = $$[$0-1] + $$[$0];
break;
case 58:this.$ = $$[$0-1] + $$[$0];
break;
case 59:this.$ = $$[$0-2] + "\\";
break;
case 60:this.$ = $$[$0-2] + $$[$0];
break;
case 61:this.$ = [$$[$0]];
break;
case 62:this.$ = [$$[$0]];
break;
case 63:this.$ = $$[$0];
break;
case 64:this.$ = ["\\"];
break;
case 65:this.$ = [$$[$0]];
break;
case 66:this.$ = [new yy.Command($$[$0-1], [], [])].concat($$[$0]);
break;
case 67:this.$ = [new yy.Command($$[$0-2], $$[$0-1], [])].concat($$[$0-1]);
break;
case 68:this.$ = [new yy.Command($$[$0-1], [], $$[$0])];
break;
case 69:this.$ = [new yy.Command($$[$0-2], $$[$0-1], $$[$0])];
break;
case 70:this.$ = $$[$0];
break;
case 71:this.$ = $$[$0];
break;
case 72:this.$ = $$[$0];
break;
case 73:this.$ = $$[$0];
break;
case 74:this.$ = $$[$0];
break;
case 75:this.$ = $$[$0];
break;
case 76:this.$ = $$[$0];
break;
case 77:this.$ = $$[$0];
break;
case 78:this.$ = $$[$0];
break;
case 79:this.$ = $$[$0];
break;
case 80:this.$ = $$[$0];
break;
case 81:this.$ = $$[$0];
break;
case 82:this.$ = $$[$0];
break;
case 83:this.$ = $$[$0];
break;
case 84:this.$ = $$[$0];
break;
case 85:this.$ = $$[$0];
break;
case 86:this.$ = $$[$0];
break;
case 87:this.$ = $$[$0];
break;
case 88:this.$ = $$[$0];
break;
case 89:this.$ = $$[$0];
break;
case 90:this.$ = $$[$0];
break;
case 91:this.$ = $$[$0];
break;
case 92:this.$ = $$[$0];
break;
case 93:this.$ = $$[$0];
break;
case 94:this.$ = $$[$0];
break;
case 95:this.$ = $$[$0];
break;
case 96:this.$ = $$[$0];
break;
case 97:this.$ = $$[$0];
break;
case 98:this.$ = $$[$0];
break;
case 99:this.$ = $$[$0];
break;
case 100:this.$ = $$[$0];
break;
case 101:this.$ = $$[$0];
break;
case 102:this.$ = $$[$0-1];
break;
case 103:this.$ = $$[$0-1] + $$[$0];
break;
case 104:this.$ = $$[$0-2] + $$[$0];
break;
case 105:this.$ = $$[$0-2] + "\\" + $$[$0];
break;
case 106:this.$ = '';
break;
case 107:this.$ = $$[$0];
break;
case 108:this.$ = $$[$0];
break;
case 109:this.$ = $$[$0];
break;
case 110:this.$ = $$[$0];
break;
case 111:this.$ = $$[$0];
break;
case 112:this.$ = $$[$0];
break;
case 113:this.$ = $$[$0];
break;
case 114:this.$ = $$[$0];
break;
case 115:this.$ = $$[$0];
break;
case 116:this.$ = $$[$0];
break;
}
},
table: [{3:1,4:2,5:[1,3],6:4,7:5,8:6,9:V0,14:V1,16:V2,19:11,20:V3,21:V4,25:V5,27:V6,29:V7,31:V8,32:V9,38:9,39:Va},{1:[3]},{5:[1,20],6:21,7:5,8:6,9:V0,14:V1,16:V2,19:11,20:V3,21:V4,25:V5,27:V6,29:V7,31:V8,32:V9,38:9,39:Va},{1:[2,2]},o([2,4],Vb),o([2,5],Vb),o([2,6],Vb),o([2,7],Vb),o([2,61],Vb),o([2,62],Vb),{14:Vc,16:Vd,17:22,20:Ve,21:Vf,25:Vg,27:Vh,28:Vi,29:Vj,31:Vk,32:Vl,37:24,39:Vm},{20:[1,35]},o([2,70],Vb),o([2,71],Vb),o([2,72],Vb),o([2,73],Vb),o([2,74],Vb),o([2,75],Vb),o([2,76],Vb),{14:Vn,22:36},{1:[2,1]},o([2,3],Vb),o([2,63],Vb),o([2,64],Vb),o([2,65],Vb),{8:41,9:[1,42],10:38,11:43,14:[1,46],15:47,16:[1,48],19:11,20:[1,51],21:V4,23:39,25:[1,50],26:40,27:Vo,29:Vp,31:[1,49],32:[1,52],39:[1,53]},o([2,88],Vb),o([2,89],Vb),o([2,90],Vb),o([2,91],Vb),o([2,92],Vb),o([2,93],Vb),o([2,94],Vb),o([2,95],Vb),o([2,96],Vb),o([2,20],Vb),{9:[1,54],14:Vq,20:[2,21],23:55,24:56,25:Vr,29:Vp},o([2,43],Vs),o([2,66],Vb),{8:61,9:[1,62],12:59,13:63,14:[1,64],16:[1,66],18:65,19:11,20:[1,70],21:V4,25:[1,69],26:60,27:Vo,29:[1,68],31:[1,67],32:[1,71],39:[1,72]},o([2,68],Vb),o([2,8],Vb),o([2,9],Vb),o([2,10],Vb),{9:[1,74],14:Vt,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,30:73,31:[1,75],33:76,34:77,35:79,36:80,39:Vz},{4:87,6:4,7:5,8:6,9:V0,14:V1,16:V2,19:11,20:V3,21:V4,25:V5,27:V6,28:[1,88],29:V7,31:V8,32:V9,38:9,39:Va},o([2,14],Vb),o([2,15],Vb),{14:Vc,16:Vd,17:89,20:Ve,21:Vf,25:Vg,27:Vh,28:Vi,29:Vj,31:Vk,32:Vl,37:24,39:Vm},o([2,83],Vb),o([2,84],Vb),o([2,85],Vb),o([2,86],Vb),o([2,87],Vb),{20:[2,22],24:90,25:Vr},{9:[1,91],20:[2,23],24:92,25:Vr},{9:[1,93],20:[2,25],25:VA},o([2,44],Vs),{9:[1,96],14:Vn,22:95},o([2,67],Vb),o([2,69],Vb),o([2,11],Vb),o([2,12],Vb),o([2,13],Vb),o([2,17],Vb),o([2,18],Vb),{14:Vc,16:Vd,17:97,20:Ve,21:Vf,25:Vg,27:Vh,28:Vi,29:Vj,31:Vk,32:Vl,37:24,39:Vm},o([2,77],Vb),o([2,78],Vb),o([2,79],Vb),o([2,80],Vb),o([2,81],Vb),o([2,82],Vb),{31:[1,98],32:[1,99]},{14:Vt,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,31:[1,100],34:101,35:79,36:80,39:Vz},o([2,47],VB),o([2,49],VC),{9:VD,14:VE,16:VF,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,31:VG,32:VG,35:104,36:105,39:Vz},o([2,52],VH),o([2,53],VH),o([2,54],VH),{9:VI,14:VI,20:VI,21:VI,25:VI,27:VI,28:VI,29:VI,31:VI,32:VI,39:VI,40:107,42:VI},o([2,97],VH),o([2,98],VH),o([2,99],VH),o([2,100],VH),o([2,101],VH),{6:21,7:5,8:6,9:V0,14:V1,16:V2,19:11,20:V3,21:V4,25:V5,27:V6,28:[1,108],29:V7,31:V8,32:V9,38:9,39:Va},o([2,42],Vb),o([2,16],Vb),{9:[1,109],20:[2,31],25:VA},{20:[2,24],24:110,25:Vr},{9:[1,111],20:[2,29],25:VA},{20:[2,26]},{9:[1,113],14:Vn,22:112},{9:VJ,14:Vq,20:VJ,23:114,25:VJ,29:Vp},{14:Vn,22:115},o([2,19],Vb),o([2,45],VB),{9:[1,117],14:Vt,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,33:116,34:77,35:79,36:80,39:Vz},o([2,46],VB),{9:VD,14:VE,16:VF,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,31:VK,32:VK,35:104,36:105,39:Vz},o([2,55],VH),o([2,56],VH),o([2,57],VH),o([2,58],VH),{16:[1,118],20:Ve,21:Vf,25:Vg,27:Vh,28:Vi,29:Vj,31:Vk,32:Vl,37:119,39:Vm},{9:VL,14:VM,20:VN,21:VO,25:VP,27:VQ,28:VR,29:VS,31:VT,32:VU,39:[1,120],41:121,42:[1,122]},o([2,41],Vb),{20:[2,32]},{9:[1,133],20:[2,27],25:VA},{20:[2,30]},{9:VV,14:Vq,20:VV,23:134,25:VV,29:Vp},{14:Vn,22:135},o([2,35],VW),{9:VX,14:Vq,20:VX,23:136,25:VX,29:Vp},o([2,48],VC),{14:Vt,20:Vu,21:Vv,25:Vw,27:Vx,28:Vy,34:101,35:79,36:80,39:Vz},o([2,59],VH),o([2,60],VH),o([2,102],VH),o([2,103],VY),{9:VL,14:VM,20:VN,21:VO,25:VP,27:VQ,28:VR,29:VS,31:VT,32:VU,39:[1,137],41:138},o([2,107],VY),o([2,108],VY),o([2,109],VY),o([2,110],VY),o([2,111],VY),o([2,112],VY),o([2,113],VY),o([2,114],VY),o([2,115],VY),o([2,116],VY),{20:[2,28]},o([2,39],VW),{9:VZ,14:Vq,20:VZ,23:139,25:VZ,29:Vp},o([2,36],VW),o([2,104],VY),o([2,105],VY),o([2,40],VW)],
defaultActions: {3:[2,2],20:[2,1],93:[2,26],109:[2,32],111:[2,30],133:[2,28]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        function lex() {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}